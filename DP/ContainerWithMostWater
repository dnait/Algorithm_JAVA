Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.

class Solution {
        public int maxArea(int[] height) {
            if (height == null || height.length == 0) return 0;
            int l = 0, r = height.length - 1;
            int res = 0;
            while (l < r) {
                res = Math.max(res, Math.min(height[l], height[r]) * (r - l));
                if (height[l] < height[r]) {
                    l++;
                } else {
                    r--; //考虑递增，递减的情况
                }
            }
            return res;
        }

    public int maxArea2(int[] height) {
        if (height == null || height.length == 0) return 0;
        int res = 0;
        int l = 0, r = height.length - 1;
        while (l < r) {
            res = Math.max(res, Math.min(height[l], height[r]) * (r - l));
            if (height[l] < height[r]) {
                l++;
            } else {
                r--;
            }
        }
        return res;
    }
}
